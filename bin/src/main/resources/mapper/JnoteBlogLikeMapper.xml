<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnote.mapper.JnoteBlogLikeMapper">
  <resultMap id="BaseResultMap" type="com.jnote.model.JnoteBlogLike">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_id" jdbcType="INTEGER" property="blog_id" />
    <result column="member_id" jdbcType="INTEGER" property="member_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blog_id, member_id, create_time, update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jnote_blog_like
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jnote_blog_like
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jnote.model.JnoteBlogLike">
    insert into jnote_blog_like (id, blog_id, member_id, 
      create_time, update_time, status
      )
    values (#{id,jdbcType=INTEGER}, #{blog_id,jdbcType=INTEGER}, #{member_id,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jnote.model.JnoteBlogLike">
    insert into jnote_blog_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blog_id != null">
        blog_id,
      </if>
      <if test="member_id != null">
        member_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blog_id != null">
        #{blog_id,jdbcType=INTEGER},
      </if>
      <if test="member_id != null">
        #{member_id,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnote.model.JnoteBlogLike">
    update jnote_blog_like
    <set>
      <if test="blog_id != null">
        blog_id = #{blog_id,jdbcType=INTEGER},
      </if>
      <if test="member_id != null">
        member_id = #{member_id,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnote.model.JnoteBlogLike">
    update jnote_blog_like
    set blog_id = #{blog_id,jdbcType=INTEGER},
      member_id = #{member_id,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>