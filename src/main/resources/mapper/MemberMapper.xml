<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnote.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.jnote.model.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name_en" jdbcType="VARCHAR" property="name_en" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="department_id" jdbcType="INTEGER" property="department_id" />
    <result column="job_id" jdbcType="INTEGER" property="job_id" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="weixin" jdbcType="CHAR" property="weixin" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="job_description" jdbcType="VARCHAR" property="job_description" />
    <result column="no" jdbcType="CHAR" property="no" />
    <result column="blogname" jdbcType="VARCHAR" property="blogname" />
    <result column="salt" jdbcType="CHAR" property="salt" />
    <result column="is_acceptinvitation" jdbcType="BIT" property="is_acceptinvitation" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, nickname, name_en, photo, password, department_id, job_id, sex, phone, 
    weixin, email, job_description, no, blogname, salt, is_acceptinvitation, create_time, 
    update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jnote_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jnote_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jnote.model.Member">
    insert into jnote_member (id, name, nickname, 
      name_en, photo, password, 
      department_id, job_id, sex, 
      phone, weixin, email, job_description, 
      no, blogname, salt, is_acceptinvitation, 
      create_time, update_time, status
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{name_en,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{department_id,jdbcType=INTEGER}, #{job_id,jdbcType=INTEGER}, #{sex,jdbcType=TINYINT}, 
      #{phone,jdbcType=CHAR}, #{weixin,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{job_description,jdbcType=VARCHAR}, 
      #{no,jdbcType=CHAR}, #{blogname,jdbcType=VARCHAR}, #{salt,jdbcType=CHAR}, #{is_acceptinvitation,jdbcType=BIT}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jnote.model.Member">
    insert into jnote_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="name_en != null">
        name_en,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="department_id != null">
        department_id,
      </if>
      <if test="job_id != null">
        job_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="weixin != null">
        weixin,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="job_description != null">
        job_description,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="blogname != null">
        blogname,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="is_acceptinvitation != null">
        is_acceptinvitation,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name_en != null">
        #{name_en,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="department_id != null">
        #{department_id,jdbcType=INTEGER},
      </if>
      <if test="job_id != null">
        #{job_id,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="weixin != null">
        #{weixin,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="job_description != null">
        #{job_description,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=CHAR},
      </if>
      <if test="blogname != null">
        #{blogname,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=CHAR},
      </if>
      <if test="is_acceptinvitation != null">
        #{is_acceptinvitation,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnote.model.Member">
    update jnote_member
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name_en != null">
        name_en = #{name_en,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="department_id != null">
        department_id = #{department_id,jdbcType=INTEGER},
      </if>
      <if test="job_id != null">
        job_id = #{job_id,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="weixin != null">
        weixin = #{weixin,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="job_description != null">
        job_description = #{job_description,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=CHAR},
      </if>
      <if test="blogname != null">
        blogname = #{blogname,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="is_acceptinvitation != null">
        is_acceptinvitation = #{is_acceptinvitation,jdbcType=BIT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnote.model.Member">
    update jnote_member
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      name_en = #{name_en,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      department_id = #{department_id,jdbcType=INTEGER},
      job_id = #{job_id,jdbcType=INTEGER},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=CHAR},
      weixin = #{weixin,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      job_description = #{job_description,jdbcType=VARCHAR},
      no = #{no,jdbcType=CHAR},
      blogname = #{blogname,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=CHAR},
      is_acceptinvitation = #{is_acceptinvitation,jdbcType=BIT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="loadMemberByName" resultType="com.jnote.model.Member">
    SELECT * from jnote_member where name=#{name}
  </select>
</mapper>